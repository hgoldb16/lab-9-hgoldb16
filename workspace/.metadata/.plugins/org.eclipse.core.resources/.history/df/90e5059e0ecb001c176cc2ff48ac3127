/*
 * clock_control.c
 *
 *  Created on: May 3, 2022
 *      Author: goldbh
 */

#include "main.h"
#include "rtc.h"
#include "tim.h"
#include "usart.h"
#include "gpio.h"
#include "project_functions.h"


void time_set(void){
	RTC_TimeTypeDef new_time;
	HAL_RTC_GetTime(&hrtc, &new_time, RTC_FORMAT_BIN);


	return;
}


/* current_count = TIM2->CNT;
	  	  if (!HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4)){
	  		  TIM2->CNT = 0;
	  		  TIM16->CCR1 = 0;
	  	  }
	  	  else if ((current_count > 511)&(current_count < 1000)){
	  		  current_count = 511;
	  		  TIM2->CNT = 511;
	  		  TIM16->CCR1 = 65535;
	  	  }
	  	  else if (((current_count <= 65535)&(current_count > 65000))|(current_count == 1)){
	  		  current_count = 0;
	  		  TIM2->CNT = 0;
	  		  TIM16->CCR1 = 0;
	  	  }
	  	  else{
	  		  dutyCycle = (current_count)*128;
	  		  TIM16->CCR1 = dutyCycle;
	  	  }
	  	  sprintf(MSG, "Encoder Ticks = %u\n\r", (TIM2->CNT)>>2);
	  HAL_UART_Transmit(&huart1, MSG, sizeof(MSG), 100);
*/
